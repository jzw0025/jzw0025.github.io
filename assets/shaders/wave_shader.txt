float cat(float P0, float P1, float P2, float P3, float t)
{
	float t2 = t * t;
	float t3 = t * t2;
	return 0.5 * ((2.0 * P1) + (-P0 + P2) * t + (2.0 * P0 - 5.0 * P1 + 4.0 * P2 - P3) * t2 + (-P0 + 3.0 * P1- 3.0 * P2 + P3) * t3);
}

float blend(float t1, float t2, float d, float ct)
{
	return smoothstep(0., 1., (ct - t1) / d) *
	 (1. - smoothstep(0., 1., (ct - t2 + d) / d));
}

float sat(float f)
{
	return clamp(f, 0., 1.);
}

float dRect(vec2 pix, vec2 v0, vec2 v1)
{
	vec2 d = max(v0 - pix, pix - v1);
	return max(d.x, d.y);
}
   
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	float maxt = 14.;
	float t = mod(iTime, maxt) + 0.0;
	vec2 pix = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);
	vec4 overlay = vec4(0., 1.0, 0., 1.);
	float p0 = pix.x * 20. + t;
	float p1 = p0 + blend(5.5, 8., 1.0, t) * 3.1415;
	float glowexp = 100.;
	float d0 = pow(1.0001 - abs(pix.y - sin(p0) * 0.05 - 0.8), glowexp);
	float d1 = pow(1.0001 - abs(pix.y - sin(p1) * 0.05 - 0.5), glowexp);
	float d2 = pow(1.0001 - abs(pix.y - (sin(p0)+sin(p1)) * 0.05 - 0.2), glowexp);
	float dr = 
		(pow(1.0 - sat(dRect(pix, vec2(0.45, 0.345), vec2(0.55, 0.35))), glowexp * 5.)) +
		(pow(1.0 - sat(dRect(pix, vec2(0.45, 0.395), vec2(0.55, 0.40))), glowexp * 5.)) +
		(pow(1.0 - sat(dRect(pix, vec2(0.45, 0.662), vec2(0.55, 0.667))), glowexp * 5.)) +
		(pow(1.0 - sat(dRect(pix, vec2(0.499, 0.60), vec2(0.501, 0.73))), glowexp * 5.));
        
	overlay.xyz = vec3(d0 + dr, d1 + d2 + dr, d0 + d2 + dr);
	fragColor = overlay;
}
